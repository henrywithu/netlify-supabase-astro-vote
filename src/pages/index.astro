---
import { getEntry } from "astro:content";
import Alert from "../components/Alert.astro";
import Guide from "../components/Guide.astro";
import Layout from "../components/Layout.astro";
import TableRow from "../components/TableRow.astro";
import { supabase } from "../utils/database";

export const prerender = false;

let frameworks;
let frameworksError;

// Fetch frameworks data from Supabase if connection is set up
if (supabase) {
  const { data, error } = await supabase
    .from("frameworks")
    .select("*")
    .order("likes", { ascending: false });
  frameworks = data;
  frameworksError = error;
}

// Get guides
const connectGuide = await getEntry("guides", "guide-connect-supabase");
const fetchDataGuide = await getEntry("guides", "guide-fetch-data");
---

<Layout title="Trapnest Vote">
  {
    supabase ? (
      frameworks ? (
        <>
          <h1 class="mb-8 text-4xl font-bold">
            Vote for Your K-pop Girl Group
          </h1>
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {frameworks?.map((framework) => (
              <TableRow framework={framework} />
            ))}
          </div>
        </>
      ) : (
        <>
          {frameworksError && (
            <Alert
              title={frameworksError.code}
              text={frameworksError.message}
              variant="error"
            />
          )}
          {fetchDataGuide && <Guide guide={fetchDataGuide} />}
        </>
      )
    ) : (
      <>
        <Alert title="Finish setting up your new site" text="Before your website is ready, you must complete the steps from the guide below to create, populate, and connect your Supabase database."/>
        {connectGuide && <Guide guide={connectGuide} />}
      </>
    )
  }
</Layout>
